from full_physics import *
import numpy as np
from pressure_sigma import *
from temperature_ecmwf import *
from absorber_vmr_ecmwf import *

# Get Defaults
ls = LuaState.load_file("../unit_test_data/base_config.lua")
lg = ls.globals()
lg.config = lg.BaseConfig.new(lg.BaseConfig)
lua_config = ls.globals().config

# Uncomment this to get Lua diagnostic messages
#lua_config.diagnostic = True

# This sets up to run some real data we have extracted in the unit test
# directory

# Input for HDF file
lua_config.spectrum_file = "20100207003330_data/l1_20100207003330.h5"
lua_config.sid_string = "20100207003330"

# Use HDF Level 1 file rather than ASCII
lua_config.fm.input.l1b.creator = lg.ConfigCommon.level1b_hdf
lua_config.fm.input.l1b.noise.creator = lg.ConfigCommon.gosat_noise

# Cloud file to go with this.
lua_config.cloud_file = "20100207003330_data/cld_20100207003330.h5"

# Pressure from ECMWF
lua_config.ecmwf_file = "20100207003330_data/ecm_20100207003330.h5"
atm = lua_config.fm.atmosphere
atm.pressure.apriori = lg.ConfigCommon.ecmwf_pressure
atm.temperature.levels.apriori = lg.ConfigCommon.ecmwf_temperature
atm.absorber.H2O.apriori = lg.ConfigCommon.ecmwf_h2o_vmr

# Get apriori values from text file generated by python.
lua_config.fm.instrument.dispersion.apriori = \
   lg.ConfigCommon.ascii_dispersion("20100207003330_data/dispersion_20100207003330.dat")
atm.absorber.CO2.apriori = \
   lg.ConfigCommon.ascii_read("20100207003330_data/co2_apriori_20100207003330.dat", "co2")
atm.ground.lambertian_gsd = \
   lg.ConfigCommon.hdf_ground_spectrally_dependent_ascii_apriori("Ground/Lambertian", 1, 2, 
      "20100207003330_data/albedo_20100207003330.dat")

# Local modifications
a = np.zeros(20)
b = np.empty(20)
b[0] = 1e-3
b[1:20] = range(1,20)
b[1:20] /= 19
atm.pressure.creator = CreatorPressureSigma(lg, a, b).c
atm.temperature.creator = CreatorTemperatureEcmwf(lg).c
atm.absorber.CO2.creator = CreatorAbsorberVmrLevel(lg).c
atm.absorber.H2O.creator = CreatorAbsorberVmrEcmwf(lg).c
atm.absorber.O2.creator = CreatorAbsorberVmrLevel(lg, True).c

#lua_config.create_absorber = absorber_vmr_ecmwf.create_absorber_ecmwf
lua_config.write_jacobian = True

# Now create everything
lua_config.do_config(lua_config)


